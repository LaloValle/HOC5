
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftORleftANDleft>MAYORIGUAL<MENORIGUALIGUALRELDIFERENTEleft+-left*/%leftMENOSUNARIO!right^leftINCREMENTODECREMENTOAND CADENA CONSTANTE DECREMENTO DIFERENTE ELSE FALSE FOR FUNCION IF IGUALREL INCREMENTO INDEFINIDA MAYORIGUAL MENORIGUAL NUMERO OR PRINT TRUE VARIABLE WHILE\n\tlista \t:\n\t\t\t| lista ';'\n\t\t\t| lista sentencia\n\t lista : lista error ';' \t\n\tasignacion  : VARIABLE '=' expresion\n\t\t\t\t| INDEFINIDA '=' expresion\n\t\n\tasignacion \t: VARIABLE INCREMENTO\n\t\t\t\t| VARIABLE DECREMENTO\n\t sentencia \t: asignacion ';'\n\t\t\t\t\t| '{' listasentencias '}'\n\t sentencia : PRINT '(' expresion ')' ';' \tsentencia : while condicion sentencia termino sentencia \t: if condicion sentencia termino\n\t\t\t\t\t| if condicion sentencia termino ELSE sentencia termino\n\t sentencia : for '(' listaasignaciones condicion listaexpresiones ')' sentencia termino \n\tlistaasignaciones \t: \n\t\t\t\t\t\t| siguiente\n\t\t\t\t\t\t| listaasignaciones\n\t\t\t\t\t\t| listaasignaciones asignacion coma siguiente\n\t\n\tlistaexpresiones \t: \n\t\t\t\t\t\t| siguiente\n\t\t\t\t\t\t| listaexpresiones\n\t\t\t\t\t\t| listaexpresiones expresion coma termino\n\t\n\texpresionlogica : TRUE\n\t\t\t\t\t| FALSE\n\t\n\texpresionlogica : expresion '>' expresion\n\t\t\t\t\t| expresion MAYORIGUAL expresion\n\t\t\t\t\t| expresion '<' expresion\n\t\t\t\t\t| expresion MENORIGUAL expresion\n\t\t\t\t\t| expresion IGUALREL expresion\n\t\t\t\t\t| expresion DIFERENTE expresion\n\t\t\t\t\t| expresion AND expresion\n\t\t\t\t\t| expresion OR expresion\n\t siguiente : ';' \n\tcoma \t:\n\t\t\t| ','\n\t condicion \t: '(' expresionlogica ')' \n\t\t\t\t\t|\texpresionlogica ';'\n\t while : WHILE  if : IF  for : FOR  listasentencias :\n\t\t\t\t\t\t| listasentencias\n\t\t\t\t\t\t| listasentencias sentencia\n\t \n\texpresion \t: NUMERO \n\t\t\t\t| CONSTANTE\n\t\t\t\t| CADENA\n\t expresion : VARIABLE  expresion \t: asignacion \n\t\t\t\t\t| expresionlogica\n\t\t\t\t  \t| '(' expresion ')'\n\t expresion \t: '!' expresion\n\t\t\t\t\t| '-' expresion %prec MENOSUNARIO\n\t expresion \t: FUNCION '(' expresion ')'\n\t\t\t\t\t| expresion '+' expresion\n\t\t\t\t\t| expresion '-' expresion\n\t\t\t\t\t| expresion '*' expresion\n\t\t\t\t\t| expresion '/' expresion\n\t\t\t\t\t| expresion '%' expresion\n\t\t\t\t\t| expresion '^' expresion\n\t termino :"
    
_lr_action_items = {';':([0,1,2,3,4,5,16,17,22,23,24,26,27,28,29,30,35,37,38,40,44,45,48,63,64,66,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,101,102,103,107,108,110,],[-1,2,-2,-3,16,17,-4,-9,48,-24,-25,-45,-46,-47,-48,-49,69,-7,-8,-10,-50,-61,-38,-52,-53,-61,-5,-6,96,-12,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-13,69,-35,-11,-54,69,-36,-61,-14,-61,-15,]),'error':([0,1,2,3,16,17,40,45,66,74,92,96,103,107,108,110,],[-1,4,-2,-3,-4,-9,-10,-61,-61,-12,-13,-11,-61,-14,-61,-15,]),'{':([0,1,2,3,6,16,17,18,20,34,40,41,45,48,66,74,75,92,96,98,103,104,107,108,110,],[-1,6,-2,-3,-42,-4,-9,6,6,6,-10,-44,-61,-38,-61,-12,-37,-13,-11,6,-61,6,-14,-61,-15,]),'PRINT':([0,1,2,3,6,16,17,18,20,34,40,41,45,48,66,74,75,92,96,98,103,104,107,108,110,],[-1,7,-2,-3,-42,-4,-9,7,7,7,-10,-44,-61,-38,-61,-12,-37,-13,-11,7,-61,7,-14,-61,-15,]),'VARIABLE':([0,1,2,3,6,8,9,13,14,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,],[-1,11,-2,-3,-42,29,29,-39,-40,-4,-9,11,29,11,29,-24,-25,-45,-46,-47,-48,-49,29,29,11,-16,29,-7,-8,29,-10,-44,29,-50,-61,-38,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-52,-53,29,-61,95,-17,-34,-5,-6,-12,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-13,-20,-11,-54,11,29,-21,-36,-61,11,-35,-19,-14,-61,-61,-15,-23,]),'INDEFINIDA':([0,1,2,3,6,8,9,13,14,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,],[-1,12,-2,-3,-42,12,12,-39,-40,-4,-9,12,12,12,12,-24,-25,-45,-46,-47,-48,-49,12,12,12,-16,12,-7,-8,12,-10,-44,12,-50,-61,-38,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-52,-53,12,-61,12,-17,-34,-5,-6,-12,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-13,-20,-11,-54,12,12,-21,-36,-61,12,-35,-19,-14,-61,-61,-15,-23,]),'WHILE':([0,1,2,3,6,16,17,18,20,34,40,41,45,48,66,74,75,92,96,98,103,104,107,108,110,],[-1,13,-2,-3,-42,-4,-9,13,13,13,-10,-44,-61,-38,-61,-12,-37,-13,-11,13,-61,13,-14,-61,-15,]),'IF':([0,1,2,3,6,16,17,18,20,34,40,41,45,48,66,74,75,92,96,98,103,104,107,108,110,],[-1,14,-2,-3,-42,-4,-9,14,14,14,-10,-44,-61,-38,-61,-12,-37,-13,-11,14,-61,14,-14,-61,-15,]),'FOR':([0,1,2,3,6,16,17,18,20,34,40,41,45,48,66,74,75,92,96,98,103,104,107,108,110,],[-1,15,-2,-3,-42,-4,-9,15,15,15,-10,-44,-61,-38,-61,-12,-37,-13,-11,15,-61,15,-14,-61,-15,]),'$end':([0,1,2,3,16,17,40,45,66,74,92,96,103,107,108,110,],[-1,0,-2,-3,-4,-9,-10,-61,-61,-12,-13,-11,-61,-14,-61,-15,]),'}':([6,17,18,40,41,45,66,74,92,96,103,107,108,110,],[-42,-9,40,-10,-44,-61,-61,-12,-13,-11,-61,-14,-61,-15,]),'(':([7,8,9,10,13,14,15,19,21,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[19,21,21,35,-39,-40,-41,42,42,-24,-25,-45,-46,-47,-48,-49,42,42,65,-16,42,-7,-8,42,42,-50,-38,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-52,-53,42,21,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,42,-21,-36,-35,-19,-61,-23,]),'TRUE':([8,9,13,14,19,21,23,24,26,27,28,29,30,31,32,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[23,23,-39,-40,23,23,-24,-25,-45,-46,-47,-48,-49,23,23,-16,23,-7,-8,23,23,-50,-38,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-52,-53,23,23,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,23,-21,-36,-35,-19,-61,-23,]),'FALSE':([8,9,13,14,19,21,23,24,26,27,28,29,30,31,32,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[24,24,-39,-40,24,24,-24,-25,-45,-46,-47,-48,-49,24,24,-16,24,-7,-8,24,24,-50,-38,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-52,-53,24,24,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,24,-21,-36,-35,-19,-61,-23,]),'NUMERO':([8,9,13,14,19,21,23,24,26,27,28,29,30,31,32,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[26,26,-39,-40,26,26,-24,-25,-45,-46,-47,-48,-49,26,26,-16,26,-7,-8,26,26,-50,-38,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-52,-53,26,26,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,26,-21,-36,-35,-19,-61,-23,]),'CONSTANTE':([8,9,13,14,19,21,23,24,26,27,28,29,30,31,32,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[27,27,-39,-40,27,27,-24,-25,-45,-46,-47,-48,-49,27,27,-16,27,-7,-8,27,27,-50,-38,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-52,-53,27,27,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,27,-21,-36,-35,-19,-61,-23,]),'CADENA':([8,9,13,14,19,21,23,24,26,27,28,29,30,31,32,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[28,28,-39,-40,28,28,-24,-25,-45,-46,-47,-48,-49,28,28,-16,28,-7,-8,28,28,-50,-38,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-52,-53,28,28,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,28,-21,-36,-35,-19,-61,-23,]),'!':([8,9,13,14,19,21,23,24,26,27,28,29,30,31,32,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[31,31,-39,-40,31,31,-24,-25,-45,-46,-47,-48,-49,31,31,-16,31,-7,-8,31,31,-50,-38,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-52,-53,31,31,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,31,-21,-36,-35,-19,-61,-23,]),'-':([8,9,13,14,19,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,97,99,100,102,105,106,109,111,],[32,32,-39,-40,32,32,-50,-24,-25,58,-45,-46,-47,-48,-49,32,32,-16,32,-7,-8,32,32,58,-50,-50,58,-38,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-52,-53,32,32,-17,-34,58,58,58,-37,-51,58,58,58,58,58,58,58,58,-55,-56,-57,-58,-59,-60,58,-20,-49,-48,-54,32,-21,-36,58,-19,-61,-23,]),'FUNCION':([8,9,13,14,19,21,23,24,26,27,28,29,30,31,32,35,36,37,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,99,100,102,105,106,109,111,],[33,33,-39,-40,33,33,-24,-25,-45,-46,-47,-48,-49,33,33,-16,33,-7,-8,33,33,-50,-38,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-52,-53,33,33,-17,-34,-5,-6,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,-20,-54,33,-21,-36,-35,-19,-61,-23,]),'=':([11,12,29,95,],[36,39,36,36,]),'INCREMENTO':([11,29,95,],[37,37,37,]),'DECREMENTO':([11,29,95,],[38,38,38,]),'ELSE':([17,40,45,66,74,92,96,103,107,108,110,],[-9,-10,-61,-61,-12,98,-11,-61,-14,-61,-15,]),'>':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,49,-45,-46,-47,-48,-49,-7,-8,49,-50,-50,49,-52,-53,49,49,49,-51,-26,-27,-28,-29,-30,-31,49,49,-55,-56,-57,-58,-59,-60,49,-49,-48,-54,49,]),'MAYORIGUAL':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,50,-45,-46,-47,-48,-49,-7,-8,50,-50,-50,50,-52,-53,50,50,50,-51,-26,-27,-28,-29,-30,-31,50,50,-55,-56,-57,-58,-59,-60,50,-49,-48,-54,50,]),'<':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,51,-45,-46,-47,-48,-49,-7,-8,51,-50,-50,51,-52,-53,51,51,51,-51,-26,-27,-28,-29,-30,-31,51,51,-55,-56,-57,-58,-59,-60,51,-49,-48,-54,51,]),'MENORIGUAL':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,52,-45,-46,-47,-48,-49,-7,-8,52,-50,-50,52,-52,-53,52,52,52,-51,-26,-27,-28,-29,-30,-31,52,52,-55,-56,-57,-58,-59,-60,52,-49,-48,-54,52,]),'IGUALREL':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,53,-45,-46,-47,-48,-49,-7,-8,53,-50,-50,53,-52,-53,53,53,53,-51,-26,-27,-28,-29,-30,-31,53,53,-55,-56,-57,-58,-59,-60,53,-49,-48,-54,53,]),'DIFERENTE':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,54,-45,-46,-47,-48,-49,-7,-8,54,-50,-50,54,-52,-53,54,54,54,-51,-26,-27,-28,-29,-30,-31,54,54,-55,-56,-57,-58,-59,-60,54,-49,-48,-54,54,]),'AND':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,55,-45,-46,-47,-48,-49,-7,-8,55,-50,-50,55,-52,-53,55,55,55,-51,-26,-27,-28,-29,-30,-31,-32,55,-55,-56,-57,-58,-59,-60,55,-49,-48,-54,55,]),'OR':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,56,-45,-46,-47,-48,-49,-7,-8,56,-50,-50,56,-52,-53,56,56,56,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,56,-49,-48,-54,56,]),'+':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,57,-45,-46,-47,-48,-49,-7,-8,57,-50,-50,57,-52,-53,57,57,57,-51,57,57,57,57,57,57,57,57,-55,-56,-57,-58,-59,-60,57,-49,-48,-54,57,]),'*':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,59,-45,-46,-47,-48,-49,-7,-8,59,-50,-50,59,-52,-53,59,59,59,-51,59,59,59,59,59,59,59,59,59,59,-57,-58,-59,-60,59,-49,-48,-54,59,]),'/':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,60,-45,-46,-47,-48,-49,-7,-8,60,-50,-50,60,-52,-53,60,60,60,-51,60,60,60,60,60,60,60,60,60,60,-57,-58,-59,-60,60,-49,-48,-54,60,]),'%':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,61,-45,-46,-47,-48,-49,-7,-8,61,-50,-50,61,-52,-53,61,61,61,-51,61,61,61,61,61,61,61,61,61,61,-57,-58,-59,-60,61,-49,-48,-54,61,]),'^':([22,23,24,25,26,27,28,29,30,37,38,43,44,46,47,63,64,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,105,],[-50,-24,-25,62,-45,-46,-47,-48,-49,-7,-8,62,-50,-50,62,62,62,62,62,62,-51,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-49,-48,-54,62,]),')':([23,24,26,27,28,29,30,37,38,43,44,46,47,48,63,64,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,99,100,102,105,109,111,],[-24,-25,-45,-46,-47,-48,-49,-7,-8,73,-50,75,76,-38,-52,-53,-34,-5,-6,76,-37,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,97,-20,-54,104,-21,-36,-35,-61,-23,]),',':([23,24,26,27,28,29,30,37,38,44,63,64,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,105,],[-24,-25,-45,-46,-47,-48,-49,-7,-8,-50,-52,-53,-5,-6,-51,-26,-27,-28,-29,-30,-31,-32,-33,-55,-56,-57,-58,-59,-60,102,-54,102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lista':([0,],[1,]),'sentencia':([1,18,20,34,98,104,],[3,41,45,66,103,108,]),'asignacion':([1,8,9,18,19,20,21,31,32,34,36,39,42,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,67,98,99,104,],[5,30,30,5,30,5,30,30,30,5,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,94,5,30,5,]),'while':([1,18,20,34,98,104,],[8,8,8,8,8,8,]),'if':([1,18,20,34,98,104,],[9,9,9,9,9,9,]),'for':([1,18,20,34,98,104,],[10,10,10,10,10,10,]),'listasentencias':([6,],[18,]),'condicion':([8,9,67,],[20,34,93,]),'expresionlogica':([8,9,19,21,31,32,36,39,42,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,67,99,],[22,22,44,46,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,22,44,]),'expresion':([8,9,19,21,31,32,36,39,42,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,67,99,],[25,25,43,47,63,64,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,25,105,]),'listaasignaciones':([35,],[67,]),'siguiente':([35,93,101,],[68,100,106,]),'termino':([45,66,103,108,109,],[74,92,107,110,111,]),'listaexpresiones':([93,],[99,]),'coma':([94,105,],[101,109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lista","S'",1,None,None,None),
  ('lista -> <empty>','lista',0,'p_lista','AnalizadorSintactico.py',31),
  ('lista -> lista ;','lista',2,'p_lista','AnalizadorSintactico.py',32),
  ('lista -> lista sentencia','lista',2,'p_lista','AnalizadorSintactico.py',33),
  ('lista -> lista error ;','lista',3,'p_lista_error','AnalizadorSintactico.py',42),
  ('asignacion -> VARIABLE = expresion','asignacion',3,'p_asignacion','AnalizadorSintactico.py',50),
  ('asignacion -> INDEFINIDA = expresion','asignacion',3,'p_asignacion','AnalizadorSintactico.py',51),
  ('asignacion -> VARIABLE INCREMENTO','asignacion',2,'p_asignacion_unidad','AnalizadorSintactico.py',60),
  ('asignacion -> VARIABLE DECREMENTO','asignacion',2,'p_asignacion_unidad','AnalizadorSintactico.py',61),
  ('sentencia -> asignacion ;','sentencia',2,'p_sentencia','AnalizadorSintactico.py',71),
  ('sentencia -> { listasentencias }','sentencia',3,'p_sentencia','AnalizadorSintactico.py',72),
  ('sentencia -> PRINT ( expresion ) ;','sentencia',5,'p_sentencia_print','AnalizadorSintactico.py',81),
  ('sentencia -> while condicion sentencia termino','sentencia',4,'p_sentencia_while','AnalizadorSintactico.py',87),
  ('sentencia -> if condicion sentencia termino','sentencia',4,'p_sentencia_if','AnalizadorSintactico.py',95),
  ('sentencia -> if condicion sentencia termino ELSE sentencia termino','sentencia',7,'p_sentencia_if','AnalizadorSintactico.py',96),
  ('sentencia -> for ( listaasignaciones condicion listaexpresiones ) sentencia termino','sentencia',8,'p_sentencia_for','AnalizadorSintactico.py',112),
  ('listaasignaciones -> <empty>','listaasignaciones',0,'p_listaasignaciones','AnalizadorSintactico.py',124),
  ('listaasignaciones -> siguiente','listaasignaciones',1,'p_listaasignaciones','AnalizadorSintactico.py',125),
  ('listaasignaciones -> listaasignaciones','listaasignaciones',1,'p_listaasignaciones','AnalizadorSintactico.py',126),
  ('listaasignaciones -> listaasignaciones asignacion coma siguiente','listaasignaciones',4,'p_listaasignaciones','AnalizadorSintactico.py',127),
  ('listaexpresiones -> <empty>','listaexpresiones',0,'p_listaexpresiones','AnalizadorSintactico.py',136),
  ('listaexpresiones -> siguiente','listaexpresiones',1,'p_listaexpresiones','AnalizadorSintactico.py',137),
  ('listaexpresiones -> listaexpresiones','listaexpresiones',1,'p_listaexpresiones','AnalizadorSintactico.py',138),
  ('listaexpresiones -> listaexpresiones expresion coma termino','listaexpresiones',4,'p_listaexpresiones','AnalizadorSintactico.py',139),
  ('expresionlogica -> TRUE','expresionlogica',1,'p_expresionlogica_constantes','AnalizadorSintactico.py',148),
  ('expresionlogica -> FALSE','expresionlogica',1,'p_expresionlogica_constantes','AnalizadorSintactico.py',149),
  ('expresionlogica -> expresion > expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',156),
  ('expresionlogica -> expresion MAYORIGUAL expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',157),
  ('expresionlogica -> expresion < expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',158),
  ('expresionlogica -> expresion MENORIGUAL expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',159),
  ('expresionlogica -> expresion IGUALREL expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',160),
  ('expresionlogica -> expresion DIFERENTE expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',161),
  ('expresionlogica -> expresion AND expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',162),
  ('expresionlogica -> expresion OR expresion','expresionlogica',3,'p_expresionlogica_operaciones','AnalizadorSintactico.py',163),
  ('siguiente -> ;','siguiente',1,'p_siguiente','AnalizadorSintactico.py',178),
  ('coma -> <empty>','coma',0,'p_coma','AnalizadorSintactico.py',185),
  ('coma -> ,','coma',1,'p_coma','AnalizadorSintactico.py',186),
  ('condicion -> ( expresionlogica )','condicion',3,'p_condicion','AnalizadorSintactico.py',196),
  ('condicion -> expresionlogica ;','condicion',2,'p_condicion','AnalizadorSintactico.py',197),
  ('while -> WHILE','while',1,'p_while','AnalizadorSintactico.py',204),
  ('if -> IF','if',1,'p_if','AnalizadorSintactico.py',210),
  ('for -> FOR','for',1,'p_for','AnalizadorSintactico.py',216),
  ('listasentencias -> <empty>','listasentencias',0,'p_listasentencias','AnalizadorSintactico.py',222),
  ('listasentencias -> listasentencias','listasentencias',1,'p_listasentencias','AnalizadorSintactico.py',223),
  ('listasentencias -> listasentencias sentencia','listasentencias',2,'p_listasentencias','AnalizadorSintactico.py',224),
  ('expresion -> NUMERO','expresion',1,'p_expresion_constantes','AnalizadorSintactico.py',235),
  ('expresion -> CONSTANTE','expresion',1,'p_expresion_constantes','AnalizadorSintactico.py',236),
  ('expresion -> CADENA','expresion',1,'p_expresion_constantes','AnalizadorSintactico.py',237),
  ('expresion -> VARIABLE','expresion',1,'p_expresion_variable','AnalizadorSintactico.py',243),
  ('expresion -> asignacion','expresion',1,'p_expresion_asignacion','AnalizadorSintactico.py',248),
  ('expresion -> expresionlogica','expresion',1,'p_expresion_asignacion','AnalizadorSintactico.py',249),
  ('expresion -> ( expresion )','expresion',3,'p_expresion_asignacion','AnalizadorSintactico.py',250),
  ('expresion -> ! expresion','expresion',2,'p_expresion_negaciones','AnalizadorSintactico.py',256),
  ('expresion -> - expresion','expresion',2,'p_expresion_negaciones','AnalizadorSintactico.py',257),
  ('expresion -> FUNCION ( expresion )','expresion',4,'p_expresion_operaciones','AnalizadorSintactico.py',265),
  ('expresion -> expresion + expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',266),
  ('expresion -> expresion - expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',267),
  ('expresion -> expresion * expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',268),
  ('expresion -> expresion / expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',269),
  ('expresion -> expresion % expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',270),
  ('expresion -> expresion ^ expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',271),
  ('termino -> <empty>','termino',0,'p_termino','AnalizadorSintactico.py',288),
]
